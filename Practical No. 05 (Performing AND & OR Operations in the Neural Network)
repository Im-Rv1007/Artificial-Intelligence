#Performing AND & OR Operations in the Neural Network


import numpy as np

def unitStep(v):
  if v >= 0:
    return 1
  else:
    return 0

def pm(x,w,b):
  v=np.dot(w,x)+b
  y= unitStep(v)
  return y

def or_logic(x):
  w=np.array([1,1])
  b= -0.5
  return pm(x,w,b)

def and_logic(x):
  w=np.array([1,1])
  b= -1.5
  return pm(x,w,b)


#and functiion -1.5 bias

test1= np.array([0,0])
test2= np.array([0,1])
test3= np.array([1,0])
test4= np.array([1,1])
print("OR GATE")
print("or first({},{})={}:".format(0,0,or_logic(test1)))
print("or second({},{})={}:".format(0,1,or_logic(test2)))
print("or third({},{})={}:".format(1,0,or_logic(test3)))
print("or fourth({},{})={}:".format(1,1,or_logic(test4)))
print("")
print("AND GATE")
print("or first({},{})={}:".format(0,0,and_logic(test1)))
print("or second({},{})={}:".format(0,1,and_logic(test2)))
print("or third({},{})={}:".format(1,0,and_logic(test3)))
print("or fourth({},{})={}:".format(1,1,and_logic(test4)))
print("")

